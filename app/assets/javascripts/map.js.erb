$(function () {
  

$('#layer_selector li').click(function() {        
  $('#layer_select li').addClass('selected');
});
var col1 = 'pm25_2000';
var col2 = '';
var country = 'country';
var city = 'city_station';
var pm = 'pm_2_5';

//Formats the columns for us into css
String.prototype.format = (function (i, safe, arg) {
  function format() {
      var str = this,
          len = arguments.length + 1;

      for (i = 0; i < len; arg = arguments[i++]) {
          safe = typeof arg === 'object' ? JSON.stringify(arg) : arg;
          str = str.replace(RegExp('\\{' + (i - 1) + '\\}', 'g'), safe);
      }
      return str;
  }

  //format.native = String.prototype.format;
  return format;
  
})();






  // create layer selector
    var map = new L.Map('map', { 
      zoomControl: true,
      legend:true,
      center: [43, 0],
      zoom: 2,
      scrollWheelZoom: true,
      searchControl: true
    });

    

    // create our layers
    cartodb.createLayer(map, {
      user_name: 'dmonay',
      type: 'cartodb',
      sublayers: [{
        sql: "SELECT * FROM bathymetry_layers",
        cartocss: "#bathymetry_layers{ polygon-fill: #598cdb;polygon-opacity: 0.2;line-color: #FFF;line-width: 0;line-opacity: 1;}"
        },{
        sql: "SELECT * FROM pm25_na",
        cartocss: $('#pm25_na').html().format('pm25_2000'),
        interactivity: "cartodb_id, the_geom, pm25_2000, pm25_2001, pm25_2002, pm25_2003, pm25_2004, pm25_2005, pm25_2006, pm25_2007, pm25_2008, pm25_2009, pm25_2010, pm25_2011, pm25_2012, country"
        },{
        sql: "SELECT * FROM who_georeferenced_clean",
        cartocss: $('#cities').html().format('city_station'),
        interactivity: "city_station, pm_2_5, country"
        
        }]

    }).done(function(layer) {
      // add the layers to our map 
      map.addLayer(layer);
      sublayer_country = layer.getSubLayer(1);
      sublayer_country.setInteraction(true);
      sublayer_city = layer.getSubLayer(2);
      sublayer_city.setInteraction(true);
      createSelector(sublayer_country);
      createSelector(sublayer_city);
      sublayer_city.hide();

      //create infowindow
        sublayer_city.infowindow.set('template', $('#infowindow_template').html()).on('error', function() {
        console.log("some error occurred");
      });
      
      //Make Tool-tip follow the mouse.
      var event = function(e){
              $('#tool-tip').css({
                 left:  e.pageX,
                 top:   e.pageY
              });
          };
//Retrieve data to the tooltip on countries
      sublayer_country.on('featureOver', function(e, pos, latlng, data) {
        $('#tool-tip').html('<p>'  +data[country]+'<br>'+ data[col1] + '&mu;g/m<sup>3</sup></p>');
        $(document).bind('mousemove', event);
        $('#tool-tip').show();
        
      });
        sublayer_country.on('featureOut', function(e, pos, latlng, data) {
       //Make the tooltip go away when off countries
        $('#tool-tip').hide();
        $(document).unbind('mousemove', event, false);
      });
//Retrieve data to the tooltip on cities
        sublayer_city.on('featureOver', function(e, pos, latlng, data) {
        $('#tool-tip').html('<p>'  +data[city]+', '+data[country]+  '<br>'+data[pm]+ '&mu;g/m<sup>3</sup></p>');
        $(document).bind('mousemove', event);
        $('#tool-tip').show();
        
      });
        sublayer_city.on('featureOut', function(e, pos, latlng, data) {
       //Make the tooltip go away when off cities
        $('#tool-tip').hide();
        $(document).unbind('mousemove', event, false);
      });

        

        
});


/*Selection process          ------------------------------------------                       */
 
 var styles = {}, selectedStyle;
  // create layer selector
  function createSelector(layer) {

    var $options = $('#layer_selector li');
    $options.click(function(e) {
      // get the area of the selected layer
      var $li = $(e.target);
      var year = $li.attr('data');

      // deselect all and select the clicked one
      $options.removeClass('selected');
      $li.addClass('selected');


      col1 = 'pm25_' + year;
      var style = $('#pm25_na').html().format(col1);
        layer.setCartoCSS(style);
        sublayer_city.hide();


      $('#show_cities').removeClass();
      $('#hide_cities').addClass('selected');
      $(".cartodb-legend:nth-child(1)").show();

      }); 
    }

    //show and hide cities
      var $options2 = $('#layer_selector2 li');
      $options2.on("click", function(e) {
      // get the area of the selected layer
      var $li = $(e.target);
      // deselect all and select the clicked one
      $options2.removeClass('selected');
      $li.addClass('selected');

      }); 


      $("#show_cities").on("click", function(){
        //Set the column to the city_station from our cities table
        col2 = 'city_station';
        //create a local variable named style and convert our cities script above to html and run the format function defined above to render some CSS.
         var style = $('#cities').html().format(col2);
        //Attached the CSS to the layer
        sublayer_city.setCartoCSS(style);
         sublayer_city.show();

        //Hide legend on click
        $("#legend_cities").removeClass('hidden');
      });

      //Hide the cities on click
      $("#hide_cities").on("click", function(){
         sublayer_city.hide();
          var year = $('#layer_selector li.selected').attr('data');
          col1 = 'pm25_' + year;
         $("#legend_cities").addClass('hidden');
       });


      //have the info tab slide out
      $('#slide_out_info').tabSlideOut({
        tabHandle: '.handle',                     //class of the element that will become your tab
        pathToTabImage: '<%= asset_url ('slider.png') %>', //path to the image for the tab //Optionally can be set using css
        imageHeight: '200px',                     //height of tab image           //Optionally can be set using css
        imageWidth: '50px',                       //width of tab image            //Optionally can be set using css
        tabLocation: 'right',                      //side of screen where tab lives, top, right, bottom, or left
        speed: 400,                               //speed of animation
        action: 'click',                          //options: 'click' or 'hover', action to trigger animation
        topPos: '30px',                          //position from the top/ use if tabLocation is left or right
        leftPos: '0px',                          //position from left/ use if tabLocation is bottom or top
        fixedPosition: true                      //options: true makes it stick(fixed position) on scroll
    });
});